{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 791,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "from sklearn import svm, datasets\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn import neighbors\n",
    "from sklearn import datasets, linear_model\n",
    "from sklearn.metrics import mean_squared_error, r2_score\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns; sns.set()  # for plot styling\n",
    "import numpy as np"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 792,
   "metadata": {},
   "outputs": [],
   "source": [
    "can = pd.read_csv('/Users/praveena/Desktop/can.csv')\n",
    "cmp = pd.read_csv('/Users/praveena/Desktop/cmp.csv')\n",
    "can_dummies=pd.get_dummies(can)\n",
    "cmp_dummies=pd.get_dummies(cmp)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 793,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "8\n"
     ]
    }
   ],
   "source": [
    "row_count = sum(1 for row in can['cid'])\n",
    "print(row_count)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 794,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>cid</th>\n",
       "      <th>Location</th>\n",
       "      <th>Current Job title</th>\n",
       "      <th>Work Status</th>\n",
       "      <th>Degree</th>\n",
       "      <th>Experience</th>\n",
       "      <th>Skill</th>\n",
       "      <th>Salary</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>TX</td>\n",
       "      <td>SDE</td>\n",
       "      <td>US</td>\n",
       "      <td>Masters</td>\n",
       "      <td>6</td>\n",
       "      <td>C++</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>CA</td>\n",
       "      <td>SDE</td>\n",
       "      <td>H1B</td>\n",
       "      <td>Masters</td>\n",
       "      <td>6</td>\n",
       "      <td>C</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>CA</td>\n",
       "      <td>Web</td>\n",
       "      <td>US</td>\n",
       "      <td>PhD</td>\n",
       "      <td>8</td>\n",
       "      <td>HTML/CSS/Javascript</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>NY</td>\n",
       "      <td>Analyst</td>\n",
       "      <td>H1B</td>\n",
       "      <td>Masters</td>\n",
       "      <td>6</td>\n",
       "      <td>HTML/CSS/Javascript</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>TX</td>\n",
       "      <td>SDE</td>\n",
       "      <td>US</td>\n",
       "      <td>Masters</td>\n",
       "      <td>6</td>\n",
       "      <td>C</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>6</td>\n",
       "      <td>UT</td>\n",
       "      <td>SDE</td>\n",
       "      <td>H1B</td>\n",
       "      <td>PhD</td>\n",
       "      <td>2</td>\n",
       "      <td>HTML/CSS/Javascript</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>7</td>\n",
       "      <td>CA</td>\n",
       "      <td>Web</td>\n",
       "      <td>US</td>\n",
       "      <td>Masters</td>\n",
       "      <td>2</td>\n",
       "      <td>HTML/CSS/Javascript</td>\n",
       "      <td>7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>8</td>\n",
       "      <td>KY</td>\n",
       "      <td>Tester</td>\n",
       "      <td>H1B</td>\n",
       "      <td>Masters</td>\n",
       "      <td>3</td>\n",
       "      <td>Python</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   cid Location Current Job title Work Status   Degree  Experience  \\\n",
       "0    1       TX               SDE          US  Masters           6   \n",
       "1    2       CA               SDE         H1B  Masters           6   \n",
       "2    3       CA               Web          US      PhD           8   \n",
       "3    4       NY           Analyst         H1B  Masters           6   \n",
       "4    5       TX               SDE          US  Masters           6   \n",
       "5    6       UT               SDE         H1B      PhD           2   \n",
       "6    7       CA               Web          US  Masters           2   \n",
       "7    8       KY            Tester         H1B  Masters           3   \n",
       "\n",
       "                 Skill  Salary  \n",
       "0                  C++       1  \n",
       "1                    C       2  \n",
       "2  HTML/CSS/Javascript       3  \n",
       "3  HTML/CSS/Javascript       4  \n",
       "4                    C       5  \n",
       "5  HTML/CSS/Javascript       6  \n",
       "6  HTML/CSS/Javascript       7  \n",
       "7               Python       8  "
      ]
     },
     "execution_count": 794,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "can"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 795,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "4\n"
     ]
    }
   ],
   "source": [
    "row_count = sum(1 for row in cmp['jid'])\n",
    "print(row_count)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 796,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>jid</th>\n",
       "      <th>Location</th>\n",
       "      <th>Current Job title</th>\n",
       "      <th>Work Status</th>\n",
       "      <th>Degree</th>\n",
       "      <th>Experience</th>\n",
       "      <th>Skill</th>\n",
       "      <th>Salary</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>TX</td>\n",
       "      <td>SDE</td>\n",
       "      <td>GC</td>\n",
       "      <td>Masters</td>\n",
       "      <td>2</td>\n",
       "      <td>C</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>CA</td>\n",
       "      <td>Web</td>\n",
       "      <td>H1B</td>\n",
       "      <td>Masters</td>\n",
       "      <td>2</td>\n",
       "      <td>Java</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>TX</td>\n",
       "      <td>SDE</td>\n",
       "      <td>GC</td>\n",
       "      <td>Masters</td>\n",
       "      <td>2</td>\n",
       "      <td>C++</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>CA</td>\n",
       "      <td>Web</td>\n",
       "      <td>H1B</td>\n",
       "      <td>Bachelors</td>\n",
       "      <td>2</td>\n",
       "      <td>Java</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   jid Location Current Job title Work Status     Degree  Experience Skill  \\\n",
       "0    1       TX               SDE          GC    Masters           2     C   \n",
       "1    2       CA               Web         H1B    Masters           2  Java   \n",
       "2    3       TX               SDE          GC    Masters           2   C++   \n",
       "3    4       CA               Web         H1B  Bachelors           2  Java   \n",
       "\n",
       "   Salary  \n",
       "0       0  \n",
       "1       0  \n",
       "2       0  \n",
       "3       0  "
      ]
     },
     "execution_count": 796,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cmp.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 797,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Salary                   0\n",
       "Location_CA              0\n",
       "Location_TX              1\n",
       "Current Job title_SDE    1\n",
       "Current Job title_Web    0\n",
       "Work Status_GC           1\n",
       "Work Status_H1B          0\n",
       "Degree_Bachelors         0\n",
       "Degree_Masters           1\n",
       "Skill_C                  0\n",
       "Skill_C++                1\n",
       "Skill_Java               0\n",
       "Name: 2, dtype: int64"
      ]
     },
     "execution_count": 797,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cmp_dummies.iloc[  cmp_dummies['jid'].values[1]  ,2:]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 798,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Salary                       3\n",
       "Location_CA                  1\n",
       "Location_KY                  0\n",
       "Location_NY                  0\n",
       "Location_TX                  0\n",
       "Location_UT                  0\n",
       "Current Job title_Analyst    0\n",
       "Current Job title_SDE        0\n",
       "Current Job title_Tester     0\n",
       "Current Job title_Web        1\n",
       "Work Status_H1B              0\n",
       "Work Status_US               1\n",
       "Degree_Masters               0\n",
       "Degree_PhD                   1\n",
       "Skill_C                      0\n",
       "Skill_C++                    0\n",
       "Skill_HTML/CSS/Javascript    1\n",
       "Skill_Python                 0\n",
       "Name: 2, dtype: int64"
      ]
     },
     "execution_count": 798,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "can_dummies.iloc[ can_dummies['cid'].values[1]    ,2:]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 799,
   "metadata": {},
   "outputs": [],
   "source": [
    "def user_similarity(user1,job1):\n",
    "    sim=(cmp_dummies.iloc[job1,2:] - can_dummies.iloc[user1,2:])\n",
    "    return sum(sim.abs())/float(len(sim))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 802,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Location                  TX\n",
       "Current Job title        SDE\n",
       "Work Status               GC\n",
       "Degree               Masters\n",
       "Experience                 2\n",
       "Skill                    C++\n",
       "Salary                     0\n",
       "Name: 2, dtype: object"
      ]
     },
     "execution_count": 802,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cmp.iloc[  cmp['jid'].values[1]  ,1:]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 803,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "2"
      ]
     },
     "execution_count": 803,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    " cmp['jid'].values[1]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 804,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Location                              CA\n",
       "Current Job title                    Web\n",
       "Work Status                           US\n",
       "Degree                               PhD\n",
       "Experience                             8\n",
       "Skill                HTML/CSS/Javascript\n",
       "Salary                                 3\n",
       "Name: 2, dtype: object"
      ]
     },
     "execution_count": 804,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "can.iloc[  can['cid'].values[1]  ,1:]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 805,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "nan\n"
     ]
    }
   ],
   "source": [
    "sim_mid=user_similarity(cmp_dummies['jid'].values[1],can_dummies['cid'].values[1])\n",
    "print(sim_mid)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 806,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Similarity between a user and job is nan%"
     ]
    }
   ],
   "source": [
    "sim_final=1-sim_mid\n",
    "sim_final=sim_final*100\n",
    "print(\"Similarity between a user and job is \"'%.2f' % sim_final,end=\"%\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 807,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1can\t1job\n",
      "1can\t2job\n",
      "1can\t3job\n",
      "1can\t4job\n",
      "2can\t1job\n",
      "2can\t2job\n",
      "2can\t3job\n",
      "2can\t4job\n",
      "3can\t1job\n",
      "3can\t2job\n",
      "3can\t3job\n",
      "3can\t4job\n",
      "4can\t1job\n",
      "4can\t2job\n",
      "4can\t3job\n",
      "4can\t4job\n",
      "5can\t1job\n",
      "5can\t2job\n",
      "5can\t3job\n",
      "5can\t4job\n",
      "6can\t1job\n",
      "6can\t2job\n",
      "6can\t3job\n",
      "6can\t4job\n",
      "7can\t1job\n",
      "7can\t2job\n",
      "7can\t3job\n",
      "7can\t4job\n",
      "8can\t1job\n",
      "8can\t2job\n",
      "8can\t3job\n",
      "8can\t4job\n"
     ]
    }
   ],
   "source": [
    "for row in can['cid']:\n",
    "    for col in cmp['jid']:\n",
    "        print(row,end=\"can\\t\")\n",
    "        print(col,end=\"job\\n\")\n",
    "        "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 922,
   "metadata": {},
   "outputs": [],
   "source": [
    "def location_check(user1,job1):\n",
    "    sim=0\n",
    "    if(can['Location'].values[row]==cmp['Location'].values[col]):\n",
    "        sim=sim+1\n",
    "        print(can['Location'].values[row],cmp['Location'].values[col],\"ok\",sim)\n",
    "        title_check(row,col)\n",
    "        \n",
    "        \n",
    "    else:\n",
    "            print(can['Location'].values[row],cmp['Location'].values[col],\"no\")\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 923,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "def title_check(user1,job1):\n",
    "    print(user1,job1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 924,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "TX TX ok 1\n",
      "0 0\n",
      "TX CA no\n",
      "TX TX ok 1\n",
      "0 2\n",
      "TX CA no\n",
      "\n",
      "\n",
      "CA TX no\n",
      "CA CA ok 1\n",
      "1 1\n",
      "CA TX no\n",
      "CA CA ok 1\n",
      "1 3\n",
      "\n",
      "\n",
      "CA TX no\n",
      "CA CA ok 1\n",
      "2 1\n",
      "CA TX no\n",
      "CA CA ok 1\n",
      "2 3\n",
      "\n",
      "\n",
      "NY TX no\n",
      "NY CA no\n",
      "NY TX no\n",
      "NY CA no\n",
      "\n",
      "\n",
      "TX TX ok 1\n",
      "4 0\n",
      "TX CA no\n",
      "TX TX ok 1\n",
      "4 2\n",
      "TX CA no\n",
      "\n",
      "\n",
      "UT TX no\n",
      "UT CA no\n",
      "UT TX no\n",
      "UT CA no\n",
      "\n",
      "\n",
      "CA TX no\n",
      "CA CA ok 1\n",
      "6 1\n",
      "CA TX no\n",
      "CA CA ok 1\n",
      "6 3\n",
      "\n",
      "\n",
      "KY TX no\n",
      "KY CA no\n",
      "KY TX no\n",
      "KY CA no\n",
      "\n",
      "\n"
     ]
    }
   ],
   "source": [
    "for row in range(len(can)):\n",
    "    for col in range(len(cmp)):\n",
    "        location_check(row,col)\n",
    "    print(\"\\n\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 809,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0    1.0\n",
      "1    2.0\n",
      "2    3.0\n",
      "3    4.0\n",
      "4    NaN\n",
      "5    NaN\n",
      "6    NaN\n",
      "7    NaN\n",
      "Name: Salary, dtype: float64\n",
      "0    1.0\n",
      "1    2.0\n",
      "2    3.0\n",
      "3    4.0\n",
      "4    NaN\n",
      "5    NaN\n",
      "6    NaN\n",
      "7    NaN\n",
      "Name: Salary, dtype: float64\n",
      "0    1.0\n",
      "1    2.0\n",
      "2    3.0\n",
      "3    4.0\n",
      "4    NaN\n",
      "5    NaN\n",
      "6    NaN\n",
      "7    NaN\n",
      "Name: Salary, dtype: float64\n",
      "0    1.0\n",
      "1    2.0\n",
      "2    3.0\n",
      "3    4.0\n",
      "4    NaN\n",
      "5    NaN\n",
      "6    NaN\n",
      "7    NaN\n",
      "Name: Salary, dtype: float64\n",
      "0    1.0\n",
      "1    2.0\n",
      "2    3.0\n",
      "3    4.0\n",
      "4    NaN\n",
      "5    NaN\n",
      "6    NaN\n",
      "7    NaN\n",
      "Name: Salary, dtype: float64\n",
      "0    1.0\n",
      "1    2.0\n",
      "2    3.0\n",
      "3    4.0\n",
      "4    NaN\n",
      "5    NaN\n",
      "6    NaN\n",
      "7    NaN\n",
      "Name: Salary, dtype: float64\n",
      "0    1.0\n",
      "1    2.0\n",
      "2    3.0\n",
      "3    4.0\n",
      "4    NaN\n",
      "5    NaN\n",
      "6    NaN\n",
      "7    NaN\n",
      "Name: Salary, dtype: float64\n",
      "0    1.0\n",
      "1    2.0\n",
      "2    3.0\n",
      "3    4.0\n",
      "4    NaN\n",
      "5    NaN\n",
      "6    NaN\n",
      "7    NaN\n",
      "Name: Salary, dtype: float64\n",
      "0    1.0\n",
      "1    2.0\n",
      "2    3.0\n",
      "3    4.0\n",
      "4    NaN\n",
      "5    NaN\n",
      "6    NaN\n",
      "7    NaN\n",
      "Name: Salary, dtype: float64\n",
      "0    1.0\n",
      "1    2.0\n",
      "2    3.0\n",
      "3    4.0\n",
      "4    NaN\n",
      "5    NaN\n",
      "6    NaN\n",
      "7    NaN\n",
      "Name: Salary, dtype: float64\n",
      "0    1.0\n",
      "1    2.0\n",
      "2    3.0\n",
      "3    4.0\n",
      "4    NaN\n",
      "5    NaN\n",
      "6    NaN\n",
      "7    NaN\n",
      "Name: Salary, dtype: float64\n",
      "0    1.0\n",
      "1    2.0\n",
      "2    3.0\n",
      "3    4.0\n",
      "4    NaN\n",
      "5    NaN\n",
      "6    NaN\n",
      "7    NaN\n",
      "Name: Salary, dtype: float64\n",
      "0    1.0\n",
      "1    2.0\n",
      "2    3.0\n",
      "3    4.0\n",
      "4    NaN\n",
      "5    NaN\n",
      "6    NaN\n",
      "7    NaN\n",
      "Name: Salary, dtype: float64\n",
      "0    1.0\n",
      "1    2.0\n",
      "2    3.0\n",
      "3    4.0\n",
      "4    NaN\n",
      "5    NaN\n",
      "6    NaN\n",
      "7    NaN\n",
      "Name: Salary, dtype: float64\n",
      "0    1.0\n",
      "1    2.0\n",
      "2    3.0\n",
      "3    4.0\n",
      "4    NaN\n",
      "5    NaN\n",
      "6    NaN\n",
      "7    NaN\n",
      "Name: Salary, dtype: float64\n",
      "0    1.0\n",
      "1    2.0\n",
      "2    3.0\n",
      "3    4.0\n",
      "4    NaN\n",
      "5    NaN\n",
      "6    NaN\n",
      "7    NaN\n",
      "Name: Salary, dtype: float64\n",
      "0    1.0\n",
      "1    2.0\n",
      "2    3.0\n",
      "3    4.0\n",
      "4    NaN\n",
      "5    NaN\n",
      "6    NaN\n",
      "7    NaN\n",
      "Name: Salary, dtype: float64\n",
      "0    1.0\n",
      "1    2.0\n",
      "2    3.0\n",
      "3    4.0\n",
      "4    NaN\n",
      "5    NaN\n",
      "6    NaN\n",
      "7    NaN\n",
      "Name: Salary, dtype: float64\n",
      "0    1.0\n",
      "1    2.0\n",
      "2    3.0\n",
      "3    4.0\n",
      "4    NaN\n",
      "5    NaN\n",
      "6    NaN\n",
      "7    NaN\n",
      "Name: Salary, dtype: float64\n",
      "0    1.0\n",
      "1    2.0\n",
      "2    3.0\n",
      "3    4.0\n",
      "4    NaN\n",
      "5    NaN\n",
      "6    NaN\n",
      "7    NaN\n",
      "Name: Salary, dtype: float64\n",
      "0    1.0\n",
      "1    2.0\n",
      "2    3.0\n",
      "3    4.0\n",
      "4    NaN\n",
      "5    NaN\n",
      "6    NaN\n",
      "7    NaN\n",
      "Name: Salary, dtype: float64\n",
      "0    1.0\n",
      "1    2.0\n",
      "2    3.0\n",
      "3    4.0\n",
      "4    NaN\n",
      "5    NaN\n",
      "6    NaN\n",
      "7    NaN\n",
      "Name: Salary, dtype: float64\n",
      "0    1.0\n",
      "1    2.0\n",
      "2    3.0\n",
      "3    4.0\n",
      "4    NaN\n",
      "5    NaN\n",
      "6    NaN\n",
      "7    NaN\n",
      "Name: Salary, dtype: float64\n",
      "0    1.0\n",
      "1    2.0\n",
      "2    3.0\n",
      "3    4.0\n",
      "4    NaN\n",
      "5    NaN\n",
      "6    NaN\n",
      "7    NaN\n",
      "Name: Salary, dtype: float64\n",
      "0    1.0\n",
      "1    2.0\n",
      "2    3.0\n",
      "3    4.0\n",
      "4    NaN\n",
      "5    NaN\n",
      "6    NaN\n",
      "7    NaN\n",
      "Name: Salary, dtype: float64\n",
      "0    1.0\n",
      "1    2.0\n",
      "2    3.0\n",
      "3    4.0\n",
      "4    NaN\n",
      "5    NaN\n",
      "6    NaN\n",
      "7    NaN\n",
      "Name: Salary, dtype: float64\n",
      "0    1.0\n",
      "1    2.0\n",
      "2    3.0\n",
      "3    4.0\n",
      "4    NaN\n",
      "5    NaN\n",
      "6    NaN\n",
      "7    NaN\n",
      "Name: Salary, dtype: float64\n",
      "0    1.0\n",
      "1    2.0\n",
      "2    3.0\n",
      "3    4.0\n",
      "4    NaN\n",
      "5    NaN\n",
      "6    NaN\n",
      "7    NaN\n",
      "Name: Salary, dtype: float64\n",
      "0    1.0\n",
      "1    2.0\n",
      "2    3.0\n",
      "3    4.0\n",
      "4    NaN\n",
      "5    NaN\n",
      "6    NaN\n",
      "7    NaN\n",
      "Name: Salary, dtype: float64\n",
      "0    1.0\n",
      "1    2.0\n",
      "2    3.0\n",
      "3    4.0\n",
      "4    NaN\n",
      "5    NaN\n",
      "6    NaN\n",
      "7    NaN\n",
      "Name: Salary, dtype: float64\n",
      "0    1.0\n",
      "1    2.0\n",
      "2    3.0\n",
      "3    4.0\n",
      "4    NaN\n",
      "5    NaN\n",
      "6    NaN\n",
      "7    NaN\n",
      "Name: Salary, dtype: float64\n",
      "0    1.0\n",
      "1    2.0\n",
      "2    3.0\n",
      "3    4.0\n",
      "4    NaN\n",
      "5    NaN\n",
      "6    NaN\n",
      "7    NaN\n",
      "Name: Salary, dtype: float64\n",
      "0    1.0\n",
      "1    2.0\n",
      "2    3.0\n",
      "3    4.0\n",
      "4    NaN\n",
      "5    NaN\n",
      "6    NaN\n",
      "7    NaN\n",
      "Name: Salary, dtype: float64\n",
      "0    1.0\n",
      "1    2.0\n",
      "2    3.0\n",
      "3    4.0\n",
      "4    NaN\n",
      "5    NaN\n",
      "6    NaN\n",
      "7    NaN\n",
      "Name: Salary, dtype: float64\n",
      "0    1.0\n",
      "1    2.0\n",
      "2    3.0\n",
      "3    4.0\n",
      "4    NaN\n",
      "5    NaN\n",
      "6    NaN\n",
      "7    NaN\n",
      "Name: Salary, dtype: float64\n",
      "0    1.0\n",
      "1    2.0\n",
      "2    3.0\n",
      "3    4.0\n",
      "4    NaN\n",
      "5    NaN\n",
      "6    NaN\n",
      "7    NaN\n",
      "Name: Salary, dtype: float64\n",
      "0    1.0\n",
      "1    2.0\n",
      "2    3.0\n",
      "3    4.0\n",
      "4    NaN\n",
      "5    NaN\n",
      "6    NaN\n",
      "7    NaN\n",
      "Name: Salary, dtype: float64\n",
      "0    1.0\n",
      "1    2.0\n",
      "2    3.0\n",
      "3    4.0\n",
      "4    NaN\n",
      "5    NaN\n",
      "6    NaN\n",
      "7    NaN\n",
      "Name: Salary, dtype: float64\n",
      "0    1.0\n",
      "1    2.0\n",
      "2    3.0\n",
      "3    4.0\n",
      "4    NaN\n",
      "5    NaN\n",
      "6    NaN\n",
      "7    NaN\n",
      "Name: Salary, dtype: float64\n",
      "0    1.0\n",
      "1    2.0\n",
      "2    3.0\n",
      "3    4.0\n",
      "4    NaN\n",
      "5    NaN\n",
      "6    NaN\n",
      "7    NaN\n",
      "Name: Salary, dtype: float64\n",
      "0    1.0\n",
      "1    2.0\n",
      "2    3.0\n",
      "3    4.0\n",
      "4    NaN\n",
      "5    NaN\n",
      "6    NaN\n",
      "7    NaN\n",
      "Name: Salary, dtype: float64\n",
      "0    1.0\n",
      "1    2.0\n",
      "2    3.0\n",
      "3    4.0\n",
      "4    NaN\n",
      "5    NaN\n",
      "6    NaN\n",
      "7    NaN\n",
      "Name: Salary, dtype: float64\n",
      "0    1.0\n",
      "1    2.0\n",
      "2    3.0\n",
      "3    4.0\n",
      "4    NaN\n",
      "5    NaN\n",
      "6    NaN\n",
      "7    NaN\n",
      "Name: Salary, dtype: float64\n",
      "0    1.0\n",
      "1    2.0\n",
      "2    3.0\n",
      "3    4.0\n",
      "4    NaN\n",
      "5    NaN\n",
      "6    NaN\n",
      "7    NaN\n",
      "Name: Salary, dtype: float64\n",
      "0    1.0\n",
      "1    2.0\n",
      "2    3.0\n",
      "3    4.0\n",
      "4    NaN\n",
      "5    NaN\n",
      "6    NaN\n",
      "7    NaN\n",
      "Name: Salary, dtype: float64\n",
      "0    1.0\n",
      "1    2.0\n",
      "2    3.0\n",
      "3    4.0\n",
      "4    NaN\n",
      "5    NaN\n",
      "6    NaN\n",
      "7    NaN\n",
      "Name: Salary, dtype: float64\n",
      "0    1.0\n",
      "1    2.0\n",
      "2    3.0\n",
      "3    4.0\n",
      "4    NaN\n",
      "5    NaN\n",
      "6    NaN\n",
      "7    NaN\n",
      "Name: Salary, dtype: float64\n",
      "0    1.0\n",
      "1    2.0\n",
      "2    3.0\n",
      "3    4.0\n",
      "4    NaN\n",
      "5    NaN\n",
      "6    NaN\n",
      "7    NaN\n",
      "Name: Salary, dtype: float64\n",
      "0    1.0\n",
      "1    2.0\n",
      "2    3.0\n",
      "3    4.0\n",
      "4    NaN\n",
      "5    NaN\n",
      "6    NaN\n",
      "7    NaN\n",
      "Name: Salary, dtype: float64\n",
      "0    1.0\n",
      "1    2.0\n",
      "2    3.0\n",
      "3    4.0\n",
      "4    NaN\n",
      "5    NaN\n",
      "6    NaN\n",
      "7    NaN\n",
      "Name: Salary, dtype: float64\n",
      "0    1.0\n",
      "1    2.0\n",
      "2    3.0\n",
      "3    4.0\n",
      "4    NaN\n",
      "5    NaN\n",
      "6    NaN\n",
      "7    NaN\n",
      "Name: Salary, dtype: float64\n",
      "0    1.0\n",
      "1    2.0\n",
      "2    3.0\n",
      "3    4.0\n",
      "4    NaN\n",
      "5    NaN\n",
      "6    NaN\n",
      "7    NaN\n",
      "Name: Salary, dtype: float64\n",
      "0    1.0\n",
      "1    2.0\n",
      "2    3.0\n",
      "3    4.0\n",
      "4    NaN\n",
      "5    NaN\n",
      "6    NaN\n",
      "7    NaN\n",
      "Name: Salary, dtype: float64\n",
      "0    1.0\n",
      "1    2.0\n",
      "2    3.0\n",
      "3    4.0\n",
      "4    NaN\n",
      "5    NaN\n",
      "6    NaN\n",
      "7    NaN\n",
      "Name: Salary, dtype: float64\n",
      "0    1.0\n",
      "1    2.0\n",
      "2    3.0\n",
      "3    4.0\n",
      "4    NaN\n",
      "5    NaN\n",
      "6    NaN\n",
      "7    NaN\n",
      "Name: Salary, dtype: float64\n",
      "0    1.0\n",
      "1    2.0\n",
      "2    3.0\n",
      "3    4.0\n",
      "4    NaN\n",
      "5    NaN\n",
      "6    NaN\n",
      "7    NaN\n",
      "Name: Salary, dtype: float64\n",
      "0    1.0\n",
      "1    2.0\n",
      "2    3.0\n",
      "3    4.0\n",
      "4    NaN\n",
      "5    NaN\n",
      "6    NaN\n",
      "7    NaN\n",
      "Name: Salary, dtype: float64\n",
      "0    1.0\n",
      "1    2.0\n",
      "2    3.0\n",
      "3    4.0\n",
      "4    NaN\n",
      "5    NaN\n",
      "6    NaN\n",
      "7    NaN\n",
      "Name: Salary, dtype: float64\n",
      "0    1.0\n",
      "1    2.0\n",
      "2    3.0\n",
      "3    4.0\n",
      "4    NaN\n",
      "5    NaN\n",
      "6    NaN\n",
      "7    NaN\n",
      "Name: Salary, dtype: float64\n",
      "0    1.0\n",
      "1    2.0\n",
      "2    3.0\n",
      "3    4.0\n",
      "4    NaN\n",
      "5    NaN\n",
      "6    NaN\n",
      "7    NaN\n",
      "Name: Salary, dtype: float64\n",
      "0    1.0\n",
      "1    2.0\n",
      "2    3.0\n",
      "3    4.0\n",
      "4    NaN\n",
      "5    NaN\n",
      "6    NaN\n",
      "7    NaN\n",
      "Name: Salary, dtype: float64\n",
      "0    1.0\n",
      "1    2.0\n",
      "2    3.0\n",
      "3    4.0\n",
      "4    NaN\n",
      "5    NaN\n",
      "6    NaN\n",
      "7    NaN\n",
      "Name: Salary, dtype: float64\n",
      "0    1.0\n",
      "1    2.0\n",
      "2    3.0\n",
      "3    4.0\n",
      "4    NaN\n",
      "5    NaN\n",
      "6    NaN\n",
      "7    NaN\n",
      "Name: Salary, dtype: float64\n",
      "0    1.0\n",
      "1    2.0\n",
      "2    3.0\n",
      "3    4.0\n",
      "4    NaN\n",
      "5    NaN\n",
      "6    NaN\n",
      "7    NaN\n",
      "Name: Salary, dtype: float64\n"
     ]
    }
   ],
   "source": [
    "for row in can:\n",
    "    for row in cmp:\n",
    "        print(can['Salary']-cmp['Salary'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 810,
   "metadata": {},
   "outputs": [],
   "source": [
    "def fnc(user1,job1):\n",
    "    cmp['Minimum Years of Experience']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 811,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>cid</th>\n",
       "      <th>Experience</th>\n",
       "      <th>Salary</th>\n",
       "      <th>Location_CA</th>\n",
       "      <th>Location_KY</th>\n",
       "      <th>Location_NY</th>\n",
       "      <th>Location_TX</th>\n",
       "      <th>Location_UT</th>\n",
       "      <th>Current Job title_Analyst</th>\n",
       "      <th>Current Job title_SDE</th>\n",
       "      <th>Current Job title_Tester</th>\n",
       "      <th>Current Job title_Web</th>\n",
       "      <th>Work Status_H1B</th>\n",
       "      <th>Work Status_US</th>\n",
       "      <th>Degree_Masters</th>\n",
       "      <th>Degree_PhD</th>\n",
       "      <th>Skill_C</th>\n",
       "      <th>Skill_C++</th>\n",
       "      <th>Skill_HTML/CSS/Javascript</th>\n",
       "      <th>Skill_Python</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>6</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>6</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>8</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>6</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>6</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   cid  Experience  Salary  Location_CA  Location_KY  Location_NY  \\\n",
       "0    1           6       1            0            0            0   \n",
       "1    2           6       2            1            0            0   \n",
       "2    3           8       3            1            0            0   \n",
       "3    4           6       4            0            0            1   \n",
       "4    5           6       5            0            0            0   \n",
       "\n",
       "   Location_TX  Location_UT  Current Job title_Analyst  Current Job title_SDE  \\\n",
       "0            1            0                          0                      1   \n",
       "1            0            0                          0                      1   \n",
       "2            0            0                          0                      0   \n",
       "3            0            0                          1                      0   \n",
       "4            1            0                          0                      1   \n",
       "\n",
       "   Current Job title_Tester  Current Job title_Web  Work Status_H1B  \\\n",
       "0                         0                      0                0   \n",
       "1                         0                      0                1   \n",
       "2                         0                      1                0   \n",
       "3                         0                      0                1   \n",
       "4                         0                      0                0   \n",
       "\n",
       "   Work Status_US  Degree_Masters  Degree_PhD  Skill_C  Skill_C++  \\\n",
       "0               1               1           0        0          1   \n",
       "1               0               1           0        1          0   \n",
       "2               1               0           1        0          0   \n",
       "3               0               1           0        0          0   \n",
       "4               1               1           0        1          0   \n",
       "\n",
       "   Skill_HTML/CSS/Javascript  Skill_Python  \n",
       "0                          0             0  \n",
       "1                          0             0  \n",
       "2                          1             0  \n",
       "3                          1             0  \n",
       "4                          0             0  "
      ]
     },
     "execution_count": 811,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "can_dummies = pd.get_dummies(can)\n",
    "can_dummies.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 812,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>jid</th>\n",
       "      <th>Experience</th>\n",
       "      <th>Salary</th>\n",
       "      <th>Location_CA</th>\n",
       "      <th>Location_TX</th>\n",
       "      <th>Current Job title_SDE</th>\n",
       "      <th>Current Job title_Web</th>\n",
       "      <th>Work Status_GC</th>\n",
       "      <th>Work Status_H1B</th>\n",
       "      <th>Degree_Bachelors</th>\n",
       "      <th>Degree_Masters</th>\n",
       "      <th>Skill_C</th>\n",
       "      <th>Skill_C++</th>\n",
       "      <th>Skill_Java</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   jid  Experience  Salary  Location_CA  Location_TX  Current Job title_SDE  \\\n",
       "0    1           2       0            0            1                      1   \n",
       "1    2           2       0            1            0                      0   \n",
       "2    3           2       0            0            1                      1   \n",
       "3    4           2       0            1            0                      0   \n",
       "\n",
       "   Current Job title_Web  Work Status_GC  Work Status_H1B  Degree_Bachelors  \\\n",
       "0                      0               1                0                 0   \n",
       "1                      1               0                1                 0   \n",
       "2                      0               1                0                 0   \n",
       "3                      1               0                1                 1   \n",
       "\n",
       "   Degree_Masters  Skill_C  Skill_C++  Skill_Java  \n",
       "0               1        1          0           0  \n",
       "1               1        0          0           1  \n",
       "2               1        0          1           0  \n",
       "3               0        0          0           1  "
      ]
     },
     "execution_count": 812,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cmp_dummies=pd.get_dummies(cmp)\n",
    "cmp_dummies.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 813,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>cid</th>\n",
       "      <th>Experience</th>\n",
       "      <th>Salary</th>\n",
       "      <th>Location_CA</th>\n",
       "      <th>Location_KY</th>\n",
       "      <th>Location_NY</th>\n",
       "      <th>Location_TX</th>\n",
       "      <th>Location_UT</th>\n",
       "      <th>Current Job title_Analyst</th>\n",
       "      <th>Current Job title_SDE</th>\n",
       "      <th>Current Job title_Tester</th>\n",
       "      <th>Current Job title_Web</th>\n",
       "      <th>Work Status_H1B</th>\n",
       "      <th>Work Status_US</th>\n",
       "      <th>Degree_Masters</th>\n",
       "      <th>Degree_PhD</th>\n",
       "      <th>Skill_C</th>\n",
       "      <th>Skill_C++</th>\n",
       "      <th>Skill_HTML/CSS/Javascript</th>\n",
       "      <th>Skill_Python</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>6</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>8</td>\n",
       "      <td>3</td>\n",
       "      <td>8</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>6</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>6</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>6</td>\n",
       "      <td>2</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   cid  Experience  Salary  Location_CA  Location_KY  Location_NY  \\\n",
       "1    2           6       2            1            0            0   \n",
       "7    8           3       8            0            1            0   \n",
       "3    4           6       4            0            0            1   \n",
       "0    1           6       1            0            0            0   \n",
       "5    6           2       6            0            0            0   \n",
       "\n",
       "   Location_TX  Location_UT  Current Job title_Analyst  Current Job title_SDE  \\\n",
       "1            0            0                          0                      1   \n",
       "7            0            0                          0                      0   \n",
       "3            0            0                          1                      0   \n",
       "0            1            0                          0                      1   \n",
       "5            0            1                          0                      1   \n",
       "\n",
       "   Current Job title_Tester  Current Job title_Web  Work Status_H1B  \\\n",
       "1                         0                      0                1   \n",
       "7                         1                      0                1   \n",
       "3                         0                      0                1   \n",
       "0                         0                      0                0   \n",
       "5                         0                      0                1   \n",
       "\n",
       "   Work Status_US  Degree_Masters  Degree_PhD  Skill_C  Skill_C++  \\\n",
       "1               0               1           0        1          0   \n",
       "7               0               1           0        0          0   \n",
       "3               0               1           0        0          0   \n",
       "0               1               1           0        0          1   \n",
       "5               0               0           1        0          0   \n",
       "\n",
       "   Skill_HTML/CSS/Javascript  Skill_Python  \n",
       "1                          0             0  \n",
       "7                          0             1  \n",
       "3                          1             0  \n",
       "0                          0             0  \n",
       "5                          1             0  "
      ]
     },
     "execution_count": 813,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "can_train_data, can_test_data = train_test_split(can_dummies, test_size = 0.20, random_state=0)\n",
    "can_train_data.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 814,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>jid</th>\n",
       "      <th>Experience</th>\n",
       "      <th>Salary</th>\n",
       "      <th>Location_CA</th>\n",
       "      <th>Location_TX</th>\n",
       "      <th>Current Job title_SDE</th>\n",
       "      <th>Current Job title_Web</th>\n",
       "      <th>Work Status_GC</th>\n",
       "      <th>Work Status_H1B</th>\n",
       "      <th>Degree_Bachelors</th>\n",
       "      <th>Degree_Masters</th>\n",
       "      <th>Skill_C</th>\n",
       "      <th>Skill_C++</th>\n",
       "      <th>Skill_Java</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   jid  Experience  Salary  Location_CA  Location_TX  Current Job title_SDE  \\\n",
       "3    4           2       0            1            0                      0   \n",
       "1    2           2       0            1            0                      0   \n",
       "0    1           2       0            0            1                      1   \n",
       "\n",
       "   Current Job title_Web  Work Status_GC  Work Status_H1B  Degree_Bachelors  \\\n",
       "3                      1               0                1                 1   \n",
       "1                      1               0                1                 0   \n",
       "0                      0               1                0                 0   \n",
       "\n",
       "   Degree_Masters  Skill_C  Skill_C++  Skill_Java  \n",
       "3               0        0          0           1  \n",
       "1               1        0          0           1  \n",
       "0               1        1          0           0  "
      ]
     },
     "execution_count": 814,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cmp_train_data, cmp_test_data = train_test_split(cmp_dummies, test_size = 0.20, random_state=0)\n",
    "cmp_train_data.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 815,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "def user_similarity(user1,job1):\n",
    "    sim=(cmp_dummies.iloc[job1,2:] - can_dummies.iloc[user1,2:])\n",
    "    return sum(sim.abs())/float(len(sim))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    " "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 816,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Location                              CA\n",
       "Current Job title                    Web\n",
       "Work Status                           US\n",
       "Degree                               PhD\n",
       "Experience                             8\n",
       "Skill                HTML/CSS/Javascript\n",
       "Salary                                 3\n",
       "Name: 2, dtype: object"
      ]
     },
     "execution_count": 816,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "can.iloc[  can['cid'].values[1]  ,1:]\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 587,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[1, 'TX', 'GC', 'SDE', 'Masters', 2, 'C++', 120000],\n",
       "       [2, 'CA', 'H1B', 'Web', 'Masters', 2, 'Java', 14000]], dtype=object)"
      ]
     },
     "execution_count": 587,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cmp.iloc[  cmp['jid'].values[1]  ,1:]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 921,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Similarity between a user and job is nan%"
     ]
    }
   ],
   "source": [
    "sim_mid=user_similarity(cmp_dummies['jid'].values[1],can_dummies['cid'].values[1])\n",
    "sim_final=1-sim_mid\n",
    "sim_final=sim_final*100\n",
    "print(\"Similarity between a user and job is \"'%.2f' % sim_final,end=\"%\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 337,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "cid                               8\n",
       "Salary                        55241\n",
       "Experience                        1\n",
       "Rating                            4\n",
       "Location_CA                       0\n",
       "Location_KY                       1\n",
       "Location_NY                       0\n",
       "Location_TX                       0\n",
       "Location_UT                       0\n",
       "Current Company Name_A            0\n",
       "Current Company Name_B            0\n",
       "Current Company Name_C            0\n",
       "Current Company Name_Z            1\n",
       "Current Job title_Analyst         0\n",
       "Current Job title_SDE             0\n",
       "Current Job title_Tester          1\n",
       "Current Job title_Web             0\n",
       "Previous Company Name_A           0\n",
       "Previous Company Name_B           0\n",
       "Previous Company Name_C           0\n",
       "Previous Company Name_D           0\n",
       "Previous Company Name_M           1\n",
       "Previous Job title_Analyst        0\n",
       "Previous Job title_SDE            0\n",
       "Previous Job title_Test           1\n",
       "Previous Job title_Web            0\n",
       "Work Status_H1B                   1\n",
       "Work Status_US                    0\n",
       "Degree_Bachelors                  0\n",
       "Degree_Masters                    1\n",
       "Degree_PhD                        0\n",
       "Preferred Locations_CA            1\n",
       "Preferred Locations_CO            0\n",
       "Preferred Locations_NY            0\n",
       "Preferred Locations_TX            0\n",
       "Preferred Locations_UT            0\n",
       "Skill_C                           1\n",
       "Skill_C++                         0\n",
       "Skill_HTML/CSS/Javascript         0\n",
       "Skill_Java                        0\n",
       "Skill_Python                      0\n",
       "Name: 7, dtype: int64"
      ]
     },
     "execution_count": 337,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "can_dummies.iloc[dummies['cid'].values[6],:]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 243,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "dummies1 = pd.get_dummies(cmp)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 244,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "3"
      ]
     },
     "execution_count": 244,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dummies1['jid'].values[2]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 245,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Minimum Years of Experience    3\n",
       "Job Title_Analyst              0\n",
       "Job Title_SDE                  0\n",
       "Job Title_Web                  1\n",
       "Skills_C++                     1\n",
       "Skills_Java                    0\n",
       "Visa Sponsorship?_GC           1\n",
       "Visa Sponsorship?_H1B          0\n",
       "Location_CA                    0\n",
       "Location_TX                    0\n",
       "Location_UT                    1\n",
       "Name: 3, dtype: int64"
      ]
     },
     "execution_count": 245,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dummies1.iloc[dummies1['jid'].values[2],1:]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 246,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "def job_similarity(job1,job2):\n",
    "    sim=(dummies1.iloc[job2,1:] - dummies1.iloc[job1,1:])\n",
    "    return sum(sim.abs())/float(len(sim))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 247,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.72727272727272729"
      ]
     },
     "execution_count": 247,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "job_similarity(dummies1['jid'].values[2],dummies1['jid'].values[1])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 249,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "def user_job(user1,job1):\n",
    "    sim=(dummies.iloc[user1,1:] - dummies1.iloc[job1,1:])\n",
    "    return sum(sim.abs())/float(len(sim))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 250,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "3"
      ]
     },
     "execution_count": 250,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dummies1.iloc[dummies1['jid'].values[2],1]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 251,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0"
      ]
     },
     "execution_count": 251,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dummies1.iloc[dummies1['jid'].values[2],2]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 252,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1"
      ]
     },
     "execution_count": 252,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dummies1.iloc[dummies1['jid'].values[2],4]"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
